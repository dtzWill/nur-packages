diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1436ec1..4a66b3d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -31,7 +31,7 @@ add_definitions(${LIBXML2_DEFINITIONS})
 # cURL
 find_package(CURL REQUIRED)
 include_directories(${CURL_INCLUDE_DIRS})
-add_definitions(${LIBXML2_DEFINITIONS})
+add_definitions(${CURL_DEFINITIONS})
 
 # libical
 pkg_check_modules(ICAL REQUIRED libical)
diff --git a/src/main.c b/src/main.c
index 8982f7f..a35192f 100644
--- a/src/main.c
+++ b/src/main.c
@@ -21,6 +21,7 @@
 #include "week-view.h"
 
 #include <curl/curl.h>
+#include <gdk/gdk.h>
 #include <gtk/gtk.h>
 #include <libical/ical.h>
 #include <string.h>
@@ -47,6 +48,7 @@ struct _FocalApp {
 	GtkWidget* popover;
 	GtkWidget* eventDetail;
 	GtkWidget* revealer;
+	guint sync_timer_id;
 };
 
 enum {
@@ -280,6 +282,12 @@ static void workaround_sync_event_detail_with_week_view(GtkWidget* event_panel,
 	gtk_widget_set_size_request(event_panel, allocation->width, allocation->height);
 }
 
+static gboolean sync_func(gpointer userdata)
+{
+	do_calendar_sync((FocalApp*) userdata);
+	return G_SOURCE_CONTINUE;
+}
+
 static void focal_create_main_window(GApplication* app, FocalApp* fm)
 {
 	fm->mainWindow = gtk_application_window_new(GTK_APPLICATION(app));
@@ -357,13 +365,20 @@ static void focal_create_main_window(GApplication* app, FocalApp* fm)
 	gtk_widget_show_all(fm->mainWindow);
 
 	app_header_set_event(FOCAL_APP_HEADER(fm->header), NULL);
+
+	fm->sync_timer_id = gdk_threads_add_timeout_seconds_full(G_PRIORITY_DEFAULT_IDLE,
+															 120 /* sync interval, seconds */,
+															 (GSourceFunc) sync_func,
+															 fm,
+															 NULL /* finalize */);
+	g_source_set_name_by_id(fm->sync_timer_id, "[focal] sync_timer");
 }
 
 static void load_preferences(const char* filename, FocalPrefs* out)
 {
 	// set defaults
 	out->week_start_day = 0; // Sunday
-	out->week_end_day = 6;   // Saturday
+	out->week_end_day = 6;	 // Saturday
 
 	GKeyFile* kf = g_key_file_new();
 	GError* err = NULL;
@@ -410,6 +425,9 @@ static void focal_activate(GApplication* app)
 static void focal_shutdown(GApplication* app)
 {
 	FocalApp* fm = FOCAL_APP(app);
+
+	if (fm->sync_timer_id)
+		g_source_remove(fm->sync_timer_id);
 	g_slist_free_full(fm->calendars, g_object_unref);
 	g_slist_free_full(fm->accounts, (GDestroyNotify) calendar_config_free);
 	g_free(fm->path_accounts);
